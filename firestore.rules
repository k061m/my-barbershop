rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return request.auth.token.email == 'admin@admin.admin';
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow write: if isAuthenticated() && (isOwner(userId) || isAdmin());
    }
    
    // Barbers collection
    match /barbers/{barberId} {
      allow read: if true;
      allow write: if isAuthenticated() && isAdmin();
    }
    
    // Services collection
    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAuthenticated() && isAdmin();
    }
    
    // Appointments collection
    match /appointments/{appointmentId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
    }
    
    // Gallery collection
    match /gallery/{imageId} {
      allow read: if true;  // Allow public read access
      allow create, update, delete: if isAuthenticated() && isAdmin();
    }
    
    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }
  }
}